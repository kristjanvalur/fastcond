# Build directories
build/
build-*/
out/
cmake-build-*/

# CMake generated files
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
CTestTestfile.cmake
install_manifest.txt
compile_commands.json
CPackConfig.cmake
CPackSourceConfig.cmake
Testing/

# Prerequisites
*.d

# Object files
*.o
*.ko
*.obj
*.elf

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Test executables (in test directory)
test/qtest_*
test/strongtest_*
test/gil_test_*
test/gil_benchmark_*

# Alternative: ignore all executables in test/ (more comprehensive)
# test/*
# !test/*.c
# !test/*.h
# !test/Makefile

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf

# IDE and editor files
.vscode/
.vs/
.idea/
*.swp
*.swo
*~
.DS_Store

# Python virtual environments and cache
.venv/
venv/
__pycache__/
*.pyc
*.pyo
*.egg-info/
.uv/

# Backup files
*.bak
*.orig

# Documentation generated files
docs/_build/
docs/html/
docs/latex/

# Generated benchmark artifacts in other locations
benchmark_results/
charts/

# Timestamped benchmark result directories (from workflow runs)
benchmark-results-*/

# Note: Generated files in docs/ are handled by docs/.gitignore

# Valgrind output
*.valgrind
vgcore.*

# Profiling data
*.gcda
*.gcno
*.gcov
gmon.out
callgrind.out.*
perf.data*

# Sanitizer output
*.san
